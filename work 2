import java.util.ArrayList;
import java.util.Random;
import java.util.Scanner;

public class pipilu{
	private static final String[] monsterName = {"A","B","C","D","E"};
	private static int victory = 0;
	private static int relife = 2;
	private static int time = 0;
	
	public static void sleep(int time){
		try{
			Thread.sleep(time);
		} catch(InterruptedException e){
			e.printStackTrace();
		}
	}
	
	public static void main(String[] args){
		System.out.println("欢迎来到《pipilu》\n");
		Player player = createPlayer();
		System.out.println("角色已创建，请开始游戏吧。");
		while(player.getHP()>0){
			sleeep(time:300);
			ArrayList<Monster> monsters = new ArrayList<>();
			int i;
			int monster = (int)(Math.random()*3+1);
			for(i=0;i<monster;i++){
				monster.add(createMonster());
			}
			System.out.println("怪物已生成，勇敢的【"+ player.getName()+"】,快去冒险吧！")；
			sleep(300);
            for (i = 0; i < monster; i++) {
                System.out.println((i + 1) + ".【注意】您遇见了带有【" + monsters.get(i).getEquip() + "】的" + monsters.get(i).getName());
            }
            while (victory == 0) {
                player.show();
                for (i = 0; i < monster; i++) {
                    monsters.get(i).show();
                }
                sleep(300);
                int attackedMon = (int) (Math.random() * monster);
                player.attack(player, monsters.get(attackedMon));
                sleep(300);
                for (i = 0; i < monster; i++) {
                    if (monsters.get(i).getHP() > 0) {
                        monsters.get(i).attack(player, monsters.get(i));
                        if(player.getHP()<=0) break;
                    } else {
                        award += 1;
                        System.out.println("【" + monsters.get(i).getName() + "】已战死。");
                        monsters.remove(i);
                        if (monster > 0) monster -= 1;
                    }
                }
                if (monster == 0) {
                    victory = 1;
                    System.out.println("【" + player.getName() + "】获得了胜利！");
                    break;
                }
                if (player.getHP() <= 0) {
                    victory = 2;
                    System.out.println(monsters.get(i).getName() + "获得了胜利！");
                    break;
                }
                sleep(200);
            }
            if (relife > 0 && player.getHP() <= 0) {
                player.setHP(player.getHPMax());
                player.setDefine(player.getDefine() + 10);
                relife -= 1;
                System.out.println("您已复活一次，剩余复活次数：" + relife);
            } else if (relife <= 0 && player.getHP() <= 0) {
                System.out.println("勇士，您已战败......");
                break;
            }
            victory = 0;
            sleep(500);
		}
		System.out.println("您共打败【" + award + "】只怪物，真棒，勇士！");
}
private static Player createPlayer() {
        System.out.println("请先创建玩家角色：\n");
        Scanner sc = new Scanner(System.in);
        System.out.println("您的玩家名称为：");
        String name = sc.nextLine();
        System.out.println("\n您的生命值：");
        int bloodInit;
        while (!sc.hasNextInt()) {
            System.out.println("请输入合理的血量值...");
            sc = new Scanner(System.in);
        }
        bloodInit = sc.nextInt();
        while (bloodInit > 9999 || bloodInit < 0) {
            System.out.println("请输入合理的血量值...");
            bloodInit = sc.nextInt();
        }
        System.out.println("\n您的攻击力：");
        int attack;
        while (!sc.hasNextInt()) {
            System.out.println("请输入合理的攻击值...");
            sc = new Scanner(System.in);
        }
        attack = sc.nextInt();
        while (attack > 999 || attack < 0) {
            System.out.println("请输入合理的攻击值...");
            attack = sc.nextInt();
        }
        System.out.println("\n您的防御力：");
        int define;
        while (!sc.hasNextInt()) {
            System.out.println("请输入合理的防御值...");
            sc = new Scanner(System.in);
        }
        define = sc.nextInt();
        while (define > 999 || define < 0) {
            System.out.println("请输入合理的防御值...");
            define = sc.nextInt();
        }
        return new Player(name, bloodInit, attack, define);
    }
    private static Monster createMonster() {
        return new Monster(monsterNames[(int) (Math.random() * monsterNames.length)],
                (int) (Math.random() * 60) + 60,
                (int) (Math.random() * 10) + 1,
                (int) (Math.random() * 19 + 1),
                (int) (Math.random() * 5));
    }
